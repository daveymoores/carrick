name: "Carrick API Analysis"
description: "Analyze JavaScript/TypeScript APIs for cross-repository inconsistencies"

branding:
  icon: "link"
  color: "blue"

inputs:
  path:
    description: "Path to analyze"
    required: false
    default: "."
  carrick-org:
    description: "Organization name"
    required: true
  carrick-api-key:
    description: "API key"
    required: true

outputs:
  success:
    description: "Analysis completed successfully"
    value: ${{ steps.analysis.outputs.success }}
  issues-found:
    description: "Number of API issues detected"
    value: ${{ steps.analysis.outputs.issues-found }}
  pr-comment:
    description: "Formatted PR comment with API Analysis Results"
    value: ${{ steps.analysis.outputs.pr-comment }}

runs:
  using: "composite"
  steps:
    - name: Download Carrick
      shell: bash
      run: |
        curl -L -o carrick-action.tar.gz https://github.com/daveymoores/carrick/releases/latest/download/carrick-action-linux.tar.gz
        tar -xzf carrick-action.tar.gz
        chmod +x carrick

    - name: Install dependencies
      shell: bash
      run: cd ts_check && npm install

    - name: Run analysis
      id: analysis
      shell: bash
      env:
        CARRICK_ORG: ${{ inputs.carrick-org }}
        CARRICK_API_KEY: ${{ inputs.carrick-api-key }}
        CI: "true"
      run: |
        set +e
        ./carrick ${{ inputs.path }} > analysis.log 2>&1
        EXIT_CODE=$?
        set -e

        ISSUES=0
        if grep -q "CARRICK_ISSUE_COUNT:" analysis.log; then
          ISSUES=$(grep "CARRICK_ISSUE_COUNT:" analysis.log | sed 's/.*CARRICK_ISSUE_COUNT:\([0-9]*\).*/\1/')
        fi

        if [ $EXIT_CODE -eq 0 ]; then
          echo "success=true" >> $GITHUB_OUTPUT
        else
          echo "success=false" >> $GITHUB_OUTPUT
        fi

        echo "issues-found=$ISSUES" >> $GITHUB_OUTPUT

        # Extract formatted markdown output between delimiters
        if grep -q "CARRICK_OUTPUT_START" analysis.log; then
          # Extract content between delimiters
          sed -n '/<!-- CARRICK_OUTPUT_START -->/,/<!-- CARRICK_OUTPUT_END -->/p' analysis.log | \
            grep -v "CARRICK_OUTPUT_START\|CARRICK_OUTPUT_END\|CARRICK_ISSUE_COUNT" > pr_comment.md

          # Set multiline output for PR comment
          {
            echo "pr-comment<<EOF"
            cat pr_comment.md
            echo "EOF"
          } >> $GITHUB_OUTPUT
        else
          {
            echo "pr-comment<<EOF"
            echo "### 🪢 CARRICK: API Analysis Results"
            echo ""
            echo "⚠️ No API analysis results found in output."
            echo "EOF"
          } >> $GITHUB_OUTPUT
        fi

        cat analysis.log
        exit $EXIT_CODE
